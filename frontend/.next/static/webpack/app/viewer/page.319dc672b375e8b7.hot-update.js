"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/viewer/page",{

/***/ "(app-pages-browser)/./src/lib/agent/mockApi.ts":
/*!**********************************!*\
  !*** ./src/lib/agent/mockApi.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchAgentPlan: function() { return /* binding */ fetchAgentPlan; }\n/* harmony export */ });\n/* harmony import */ var _lib_pdf_extract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/pdf/extract */ \"(app-pages-browser)/./src/lib/pdf/extract.ts\");\n/* __next_internal_client_entry_do_not_use__ fetchAgentPlan auto */ \n// Simple helper to simulate network delay\nconst sleep = (ms)=>new Promise((res)=>setTimeout(res, ms));\n// A few royalty-free sample audio URLs (small, public). Fallback to a generated beep if blocked.\n// Note: In production, these would be signed URLs or served via your API.\nconst SAMPLE_AUDIO = [\n    // Public domain test tones; if blocked, the audio controller will fall back to a local beep.\n    \"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\",\n    \"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\",\n    \"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"\n];\nasync function fetchAgentPlan(config) {\n    // Simulate server thinking time\n    await sleep(600);\n    const { totalPages, strategy = \"scripted\", pdfUrl } = config;\n    // Helpers\n    const randInt = (min, max)=>Math.floor(Math.random() * (max - min + 1)) + min;\n    const uniqueSet = new Set();\n    // Phase A: randomized linear window\n    const maxLinear = Math.min(5, Math.max(1, totalPages));\n    const minLinear = Math.min(2, maxLinear);\n    const linearCount = totalPages >= 2 ? randInt(minLinear, maxLinear) : 1;\n    const maxStart = Math.max(1, totalPages - linearCount + 1);\n    const start = randInt(1, maxStart);\n    const linearPages = Array.from({\n        length: linearCount\n    }, (_, i)=>start + i);\n    linearPages.forEach((p)=>uniqueSet.add(p));\n    // Phase B: random unique pages not in linear window\n    const maxRandom = Math.min(5, totalPages);\n    const randomCount = randInt(2, maxRandom);\n    const randomPages = [];\n    while(randomPages.length < randomCount){\n        const n = randInt(1, totalPages);\n        if (!uniqueSet.has(n)) {\n            uniqueSet.add(n);\n            var _randomPages_;\n            // avoid repeating the last selected page between picks\n            const last = (_randomPages_ = randomPages[randomPages.length - 1]) !== null && _randomPages_ !== void 0 ? _randomPages_ : linearPages[linearPages.length - 1];\n            if (n !== last) randomPages.push(n);\n        }\n        // Break safety for tiny documents\n        if (uniqueSet.size >= totalPages) break;\n    }\n    const pages = strategy === \"linear\" ? linearPages : strategy === \"random\" ? randomPages : [\n        ...linearPages,\n        ...randomPages\n    ];\n    // Extract text (best-effort). Compute a speak time estimate based on word count (e.g., 150 wpm ~= 2.5 wps)\n    const steps = [];\n    for(let i = 0; i < pages.length; i++){\n        const page = pages[i];\n        let text = \"\";\n        if (pdfUrl) {\n            text = await (0,_lib_pdf_extract__WEBPACK_IMPORTED_MODULE_0__.extractPageText)(pdfUrl, page);\n        }\n        // Fallback transcript\n        const transcript = text || \"Narration for slide \".concat(page, \".\");\n        // Estimate: 2.5 words/second; min 4s, max 15s for demo\n        const words = transcript.split(/\\s+/).filter(Boolean).length;\n        const estimatedMs = Math.min(15000, Math.max(4000, Math.ceil(words / 2.5 * 1000)));\n        const inLinear = linearPages.includes(page);\n        steps.push({\n            page,\n            audioUrl: SAMPLE_AUDIO[i % SAMPLE_AUDIO.length],\n            transcript,\n            ttsText: transcript,\n            label: \"\".concat(inLinear ? \"Linear\" : \"Random\", \" â€¢ Slide \").concat(page),\n            speakMs: estimatedMs\n        });\n    }\n    return {\n        steps\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/agent/mockApi.ts\n"));

/***/ })

});