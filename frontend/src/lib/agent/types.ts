'use client'

export type AgentStatus =
  | 'idle'
  | 'fetching'
  | 'navigating'
  | 'playing'
  | 'paused'
  | 'completed'
  | 'stopped'
  | 'error'

export interface AgentStep {
  // 1-based page number
  page: number
  // Publicly accessible audio file URL returned by an API
  audioUrl: string
  // Streaming audio URL for lower latency (if available)
  audioStreamUrl?: string
  // URL to check audio generation status (optional, enables polling)
  audioStatusUrl?: string
  // Optional transcript to display while audio plays
  transcript?: string
  // Optional hypothesis returned by backend for this step
  hypothesis?: string
  // Optional hypothesis use returned by backend for this step
  hypothesisUse?: string
  // Origin of this hypothesis entry: 'slide' or 'question'
  source?: 'slide' | 'question'
  // Optional index for questions within a slide/session
  questionIndex?: number
  // Optional question generated by the backend to ask at end of slide
  question?: string
  // Optional text to speak using Web Speech API
  ttsText?: string
  // Optional label for UI
  label?: string
  // Simulated speech duration in milliseconds for progress visualization
  speakMs?: number
}

export interface AgentSessionConfig {
  filename: string
  totalPages: number
  pdfUrl?: string
  lectureId?: number | string
  startPage?: number
}

export interface AgentControllerState {
  status: AgentStatus
  currentStepIndex: number
  steps: AgentStep[]
  error?: string
  // True only during the initial start until audio actually begins playback
  isStarting?: boolean
}
